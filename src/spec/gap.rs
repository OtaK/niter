#[derive(
    Debug,
    Clone,
    Copy,
    strum::Display,
    strum::EnumString,
    num_enum::TryFromPrimitive,
    num_enum::IntoPrimitive,
    serde_repr::Serialize_repr,
    serde_repr::Deserialize_repr,
)]
#[cfg_attr(target_os = "linux", derive(zvariant_derive::Type))]
#[repr(u16)]
pub enum GenericAccessProfile {
    Flags = 0x01,
    Incomplete16bServiceUUIDs = 0x02,
    Complete16bServiceUUIDs = 0x03,
    Incomplete32bServiceUUIDs = 0x04,
    Complete32bServiceUUIDs = 0x05,
    Incomplete128bServiceUUIDs = 0x06,
    Complete128bServiceUUIDs = 0x07,
    ShortenedLocalName = 0x08,
    CompleteLocalName = 0x09,
    TxPowerLevel = 0x0A,
    ClassOfDevice = 0x0D,
    SimplePairingHashC = 0x0E,
    //SimplePairingHashC192 = 0x0E,
    SimplePairingRandomizerR = 0x0F,
    //SimplePairingRandomizerR192 = 0x0F,
    DeviceID = 0x10,
    //SecurityManagerTKValue = 0x10,
    SecurityManagerOutOfBandFlags = 0x11,
    SlaveConnectionIntervalRange = 0x12,
    ServiceSolitication16bUUIDList = 0x14,
    ServiceSolitication128bUUIDList = 0x15,
    ServiceData = 0x16,
    //ServiceData16bUUID = 0x16,
    PublicTargetAddress = 0x17,
    RandomTargetAddress = 0x18,
    Appearance = 0x19,
    AdvertisingInterval = 0x1A,
    LEBluetoothDeviceAddress = 0x1B,
    LERole = 0x1C,
    SimplePairingHashC256 = 0x1D,
    SimplePairingRandomizerR256 = 0x1E,
    ServiceSolitication32bUUIDList = 0x1F,
    ServiceData32bUUID = 0x20,
    ServiceData128bUUID = 0x21,
    LESecureConnectionsConfirmationValue = 0x22,
    LESecureConnectionsRandomValue = 0x23,
    Uri = 0x24,
    IndoorPositioning = 0x25,
    TransportDiscoveryData = 0x26,
    LESupportedFeatures = 0x27,
    ChannelMapUpdateIndication = 0x28,
    PbAdv = 0x29,
    MeshMessage = 0x2A,
    MeshBeacon = 0x2B,
    BIGInfo = 0x2C,
    BroadcastCode = 0x2D,
    InformationData3D = 0x3D,
    ManufacturerSpecificData = 0xFF,
}
